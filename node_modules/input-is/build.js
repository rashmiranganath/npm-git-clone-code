'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var inputIs = {
  date: function date(value) {
    if ((0, _moment2.default)(value, 'YYYY-MM-DD', true).isValid() || (0, _moment2.default)(value, 'MM-DD-YYYY', true).isValid() || (0, _moment2.default)(value, 'DD-MM-YYYY', true).isValid() || (0, _moment2.default)(value, 'YYYY/MM/DD', true).isValid() || (0, _moment2.default)(value, 'DD/MM/YYYY', true).isValid() || (0, _moment2.default)(value, 'MM/DD/YYYY', true).isValid()) {
      return true;
    }

    return false;
  },

  datetime: function datetime(value) {
    if ((0, _moment2.default)(value, 'YYYY-MM-DD hh:mm:ss', true).isValid() || (0, _moment2.default)(value, 'YYYY-MM-DD hh:mm', true).isValid() || (0, _moment2.default)(value, 'MM-DD-YYYY hh:mm:ss', true).isValid() || (0, _moment2.default)(value, 'MM-DD-YYYY hh:mm', true).isValid() || (0, _moment2.default)(value, 'DD-MM-YYYY hh:mm:ss', true).isValid() || (0, _moment2.default)(value, 'DD-MM-YYYY hh:mm', true).isValid() || (0, _moment2.default)(value, 'YYYY/MM/DD hh:mm:ss', true).isValid() || (0, _moment2.default)(value, 'YYYY/MM/DD hh:mm', true).isValid() || (0, _moment2.default)(value, 'DD/MM/YYYY hh:mm:ss', true).isValid() || (0, _moment2.default)(value, 'DD/MM/YYYY hh:mm', true).isValid() || (0, _moment2.default)(value, 'MM/DD/YYYY hh:mm:ss', true).isValid() || (0, _moment2.default)(value, 'MM/DD/YYYY hh:mm', true).isValid()) {
      return true;
    }

    return false;
  },

  email: function email(value) {
    var regEx = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;

    return regEx.test(value);
  },

  exactly: function exactly(value, target) {
    return value === target;
  },

  filled: function filled(value) {
    return value.length > 0;
  },

  float: function float(value) {
    var regEx = /^\d+\.\d+$/;

    return regEx.test(value);
  },

  integer: function integer(value) {
    var regEx = /^\d+$/;

    return regEx.test(value);
  },

  max: function max(value, target) {
    return value.length <= target;
  },

  min: function min(value, target) {
    return value.length >= target;
  },

  not: function not(value, target) {
    return value !== target;
  },

  number: function number(value) {
    return !isNaN(value);
  },

  partOf: function partOf(value, characters) {
    return characters.includes(value);
  },

  phonenumber: function phonenumber(value) {
    var regEx = /^[+]?[(]?[0-9]{3}[)]?[-\s.]?[0-9]{3}[-\s.]?[0-9]{4,10}$/;

    return regEx.test(value);
  },

  time: function time(value) {
    if ((0, _moment2.default)(value, 'hh:mm:ss', true).isValid() || (0, _moment2.default)(value, 'hh:mm', true).isValid()) {
      return true;
    }

    return false;
  },

  url: function url(value) {
    var regEx = /(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9]\.[^\s]{2,})/;

    return regEx.test(value);
  },

  valid: function valid(value, regEx) {
    return regEx.test(value);
  }
};

exports.default = inputIs;
module.exports = exports['default'];
