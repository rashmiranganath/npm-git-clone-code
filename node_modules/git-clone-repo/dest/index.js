'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _execa = require('execa');

var _execa2 = _interopRequireDefault(_execa);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _inputIs = require('input-is');

var _inputIs2 = _interopRequireDefault(_inputIs);

var _pathIsAbsolute = require('path-is-absolute');

var _pathIsAbsolute2 = _interopRequireDefault(_pathIsAbsolute);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var gitCloneRepo = function gitCloneRepo(URL) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      host = _ref.host,
      destination = _ref.destination;

  var cwd = process.cwd();

  var thisURL = URL;
  var thisHost = host || 'github.com';
  var thisDestination = '';

  if (destination) {
    var isAbsolute = (0, _pathIsAbsolute2.default)(destination);
    var absolutePath = _path2.default.join(cwd, destination);

    thisDestination = isAbsolute ? destination : absolutePath;
  }

  if (_inputIs2.default.url(thisURL) && !_inputIs2.default.valid(thisURL, /https:\/\//)) {
    thisURL = 'https://' + thisURL;
  } else if (!_inputIs2.default.url(thisURL) && _inputIs2.default.valid(thisURL, /.\/./)) {
    thisURL = 'https://www.' + thisHost + '/' + thisURL;
  }

  try {
    _execa2.default.shellSync('git clone ' + thisURL + ' ' + thisDestination);

    return true;
  } catch (e) {
    return false;
  }
};

exports.default = gitCloneRepo;